# -*- mode: python ; coding: utf-8 -*-

import os
import importlib

block_cipher = None


a = Analysis(['server.py'],
             pathex=['C:\\Users\\bmidt\\Master Thesis\\DeepTrack-app\\deeptrack-app-win32-x64\\resources\\app\\python_src'],
             binaries=[],
             datas=[(os.path.join(os.path.dirname(importlib.import_module('tensorflow').__file__),
                                  "lite/experimental/microfrontend/python/ops/_audio_microfrontend_op.so"),
                     "tensorflow/lite/experimental/microfrontend/python/ops/"),
                     (os.path.join(os.path.dirname(importlib.import_module('tensorflow').__file__),
                                  "python/keras/engine/base_layer_v1.py"),
                     "tensorflow/python/keras/engine/")
                     ],
             hiddenimports=['pkg_resources.py2_warn', 'imgaug', 'tensorflow', ''],
             hookspath=[],
             runtime_hooks=[],
             excludes=['deeptrack'],
             win_no_prefer_redirects=False,
             win_private_assemblies=False,
             cipher=block_cipher,
             noarchive=False)
for i in range(len(a.binaries)):
    dest, origin, kind = a.binaries[i]
    if '_pywrap_tensorflow_internal' in dest:
        a.binaries[i] = ('tensorflow.python.' + dest, origin, kind)
pyz = PYZ(a.pure, a.zipped_data,
             cipher=block_cipher)
exe = EXE(pyz,
          a.scripts,
          [],
          exclude_binaries=True,
          name='server',
          debug=False,
          bootloader_ignore_signals=False,
          strip=False,
          upx=True,
          console=True )
coll = COLLECT(exe,
               a.binaries,
               a.zipfiles,
               a.datas,
               strip=False,
               upx=True,
               upx_exclude=[],
               name='server')
